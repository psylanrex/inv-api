<?php

namespace App\Http\Controllers\:::CONTROLLERTYPE:::\:::CONTROLLERFOLDER:::;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Validation\Rule;
use App\Models\:::MODEL:::;
use App\Utilities\DropDownListMaker;
use App\Utilities\SortBy;
use App\Services\Forms\AddFormConfigService;
use App\Services\Forms\EditFormConfigService;

class :::MODEL:::sController extends Controller
{

    public $indexColumnMap = ['id', ':::COLULMN1:::'];

    public function index(Request $request)
    {
        
        $column_map = $this->indexColumnMap;

        list($sortBy, $sortOrder) = SortBy::setSortBy($request, $column_map);
        
        $:::ALLMODELS::: = :::MODEL:::::select($column_map)     
                                        ->orderBy($sortBy, $sortOrder)                                                  
                                        ->paginate(10);

        return $:::ALLMODELS:::;

    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {

           $request->validate([
   
               ':::COLULMN1:::' => 'string|max:140|required|unique::::TABLENAME:::,:::COLULMN1:::',
                               
           ]);
       
           return :::MODEL:::::create($request->all());

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        
        return :::MODEL:::::select('id', ':::COLULMN1:::', 'created_at', 'updated_at')->where('id', $id)->first();
      
    }

    public function addFormConfig(AddFormConfigService $service, DropDownListMaker $listMaker)
    {

       return $service->getFormConfig(':::MODEL:::', ':::TABLENAME:::', $listMaker);


    }

    public function editFormConfig($id, EditFormConfigService $service, DropDownListMaker $listMaker)
    { 

        return $service->getFormConfig($id, ':::MODEL:::', ':::TABLENAME:::', $listMaker); 

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {

        $request->validate([

            ':::COLULMN1:::' => [
                'required',
                'string',
                'max:140',

                Rule::unique(':::TABLENAME:::')->ignore($id),
            ]

        ]);

        $:::SINGLEMODEL::: = :::MODEL:::::find($id);

        $:::SINGLEMODEL:::->update($request->all());

        return $:::SINGLEMODEL:::;

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        
        return :::MODEL:::::destroy($id);

    }

    /**
     * Find the specified resource.
     *
     * @param  string  $name
     * @return \Illuminate\Http\Response
     */
    public function search(Request $request, $keyword)
    {
        $column_map = $this->indexColumnMap;

        list($sortBy, $sortOrder) = SortBy::setSortBy($request, $column_map);
        
        $:::SINGLEMODEL:::s = :::MODEL:::::select($column_map)
                                            ->where(':::COLULMN1:::', 'like', '%'.$keyword.'%')
                                            ->orderBy($sortBy, $sortOrder)
                                            ->paginate(10);

        return $:::SINGLEMODEL:::s;

    }

}
