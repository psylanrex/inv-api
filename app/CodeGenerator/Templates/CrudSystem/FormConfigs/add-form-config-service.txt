<?php

namespace App\Services\Forms;

use App\Models\Crud;
use App\Models\FormConfig;

class AddFormConfigService
{

    public function getFormConfig($id, $table_name, $listMaker)
    { 
        // get crud instance

        $crud = Crud::select('id as crud_id', 'crud_name', 'table_name')->where('table_name', $table_name)->first();

        // get form configs

        $formConfigs = FormConfig::select(
                                          'name', 
                                          'type', 
                                          'label', 
                                          'required', 
                                          'max_length',
                                          'default_value',
                                          'instructions')
                                ->where('crud_id', $crud->crud_id)
                                ->get();
        
        // use array so we can easily merge data in

        $formConfigs = $formConfigs->toArray();

        // set empty array to hold mutated data

        $form_config_data = [];

        // iterate over each config and format selects with dropdown values
        // the listmaker service that was handed in will retrieve our select values

        foreach ( $formConfigs as $config){

            if ( $config['type'] == 'select') {

                $select_list = $listMaker->getSelectsFromLabelName($config['label']);

                $config = array_merge($config,['selects' => $select_list]);

                $form_config_data[] = $config;

            } elseif ( $config['type'] == 'file') {

                $accept_list = ['.pdf','.doc', '.csv', '.docx', '.jpg', '.jpeg', '.png'];

                $config = array_merge($config,['id' => 'file-input', 'accepts' => $accept_list]);

                $form_config_data[] = $config;

            
            } else {

                $form_config_data[] = $config;

            }

            
        }

        // format route

        $route = $this->formatRoute($crud->table_name);

        // return data

        return ['request_type' => 'post', 'route' => $route,'form_configs' => $form_config_data];

    }

    private function formatRoute($table_name)
    {

        // we need dashes instead of underscores

        return str_replace('_', '-', $table_name);

    }

}