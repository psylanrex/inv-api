<?php

namespace App\Http\Controllers\Admin\FormConfigs;

use App\Http\Controllers\Controller;
use App\Http\Requests\FormConfigStoreRequest;
use App\Http\Requests\FormConfigUpdateRequest;
use Illuminate\Http\Request;
use App\Models\FormConfig;
use App\Services\Forms\FormConfigCreateService;
use App\Services\Forms\AddFormConfigService;
use App\Services\Forms\EditFormConfigService;
use App\Utilities\DropDownListMaker;
use App\Utilities\SortBy;

class FormConfigsController extends Controller
{

    public $index_column_map = [
        
        'id', 
        'crud_id', 
        'name',
        'type',
        'label',
        'required',
        'max_length',
        'default_value',
        'instructions'
    ];

    public function makeBulkFormConfigs(Request $request, FormConfigCreateService $service)
    {

        return $service->createFormConfigs($request);  

    }

    public function getFormConfigsByCrudId($id)
    {

        return FormConfig::where('crud_id', $id)->get();

    }

    public function index(Request $request)
    {

        // default column and direction for sorting

        $column_map = $this->index_column_map;

        list($sortBy, $sortOrder) = SortBy::setSortBy($request, $column_map);

        $form_configs =  FormConfig::select($column_map)
                                            
                                    ->orderBy($sortBy, $sortOrder)        
                                    ->paginate(10);

        return $form_configs;

    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(FormConfigStoreRequest $request)
    {
       
           return FormConfig::create($request->all());
           
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {

        $columns = [
        
            'form_configs.id', 
            'form_configs.crud_id',
            'cruds.crud_name', 
            'form_configs.name',
            'form_configs.type',
            'form_configs.label',
            'form_configs.required',
            'form_configs.max_length',
            'form_configs.default_value',
            'form_configs.instructions'
        ];
        
        $formConfig = FormConfig::select($columns)
                                ->leftJoin('cruds', 'form_configs.crud_id', '=', 'cruds.id')
                                ->where('id', $id);

    }

    public function addFormConfig(AddFormConfigService $service, DropDownListMaker $listMaker)
    {

       return $service->getFormConfig('FormConfig', 'form_configs', $listMaker);

    }

    public function editFormConfig($id, EditFormConfigService $service, DropDownListMaker $listMaker)
    { 

        return $service->getFormConfig($id, 'FormConfig', 'form_configs', $listMaker); 

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(FormConfigUpdateRequest $request, $id)
    { 

        $formConfig = FormConfig::find($id);

        $formConfig->update($request->all());

        return$formConfig;

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {

        return FormConfig::destroy($id);

    }

    /**
     * Find the specified resource.
     *
     * @param  string  $keyword
     * @return \Illuminate\Http\Response
     */
    public function search(Request $request, $keyword)
    {

        // default column and direction for sorting

        $column_map = $this->index_column_map;

        list($sortBy, $sortOrder) = SortBy::setSortBy($request, $column_map);

        $form_configs =  FormConfig::select($column_map)

                                    ->where('name', 'like', '%'.$keyword.'%')        
                                    ->orderBy($sortBy, $sortOrder)        
                                    ->paginate(10);

        return $form_configs;

    }
   
}
