<?php

namespace App\Http\Controllers\Admin\SupportTopics;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Validation\Rule;
use App\Models\SupportTopic;
use App\Utilities\DropDownListMaker;
use App\Utilities\SortBy;
use App\Services\Forms\AddFormConfigService;
use App\Services\Forms\EditFormConfigService;

class SupportTopicsController extends Controller
{

    public $indexColumnMap = ['id', 'support_topic_name'];

    public function index(Request $request)
    {
        
        $column_map = $this->indexColumnMap;

        list($sortBy, $sortOrder) = SortBy::setSortBy($request, $column_map);
        
        $supportTopics =  SupportTopic::select($column_map)     
                                    ->orderBy($sortBy, $sortOrder)                                                  
                                    ->paginate(10);

        return $supportTopics;

    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {

           $request->validate([
   
               'support_topic_name' => 'string|max:140|required|unique:support_topics,support_topic_name',
                               
           ]);
       
           return SupportTopic::create($request->all());

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {

        return SupportTopic::select('id', 'support_topic_name', 'created_at', 'updated_at')->where('id', $id)->first();

        
    }

    public function addFormConfig(AddFormConfigService $service, DropDownListMaker $listMaker)
    {

       return $service->getFormConfig('SupportTopic', 'support_topics', $listMaker);


    }

    public function editFormConfig($id, EditFormConfigService $service, DropDownListMaker $listMaker)
    { 

        return $service->getFormConfig($id, 'SupportTopic', 'support_topics', $listMaker); 

    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {

        $request->validate([

            'support_topic_name' => [
                'required',
                'string',
                'max:140',

                Rule::unique('support_topics')->ignore($id),
            ]

        ]);

        $supportTopic = SupportTopic::find($id);

        $supportTopic->update($request->all());

        return $supportTopic;

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        
        return SupportTopic::destroy($id);

    }

    /**
     * Find the specified resource.
     *
     * @param  string  $name
     * @return \Illuminate\Http\Response
     */
    public function search(Request $request, $keyword)
    {
        $column_map = $this->indexColumnMap;

        list($sortBy, $sortOrder) = SortBy::setSortBy($request, $column_map);
        
        $supportTopics =  SupportTopic::select($column_map)
                                    ->where('support_topic_name', 'like', '%'.$keyword.'%')
                                    ->orderBy($sortBy, $sortOrder)
                                    ->paginate(10);

        return $supportTopics;

    }
}